clc
clear all()
rm(list=ls())
x <- c(1,2,3,4,5,6)
y <- c(5,10,15,20,25,30)
plot(x,y)
rm(list=ls())
library(ggplot2)
install.packages("ggplot2")
p1 = pnorm(30,50,5)
p3 = 1 - pnorm(60,50,5)
p2 = qnorm(0.25,50,5)
p3 = qnorm(0.79,50,5)
p4 = 1 - pnorm(60,50,5)
p5 = dnorm(50,50,5) - dnorm(40,50,5)
p6 = rnorm(1000,50,5)
p7 = dnorm(30,50,5)
p8 = dnorm(50,50,5)
p9 = dnorm(log(60,50,5))
p9 = dnorm(60,50,5)
p10 = log(p9)
ls = function(x,y){
n = length(x)
sum_xy = sum(x*y)
mean_xy = n*mean(x)*mean(y)
sum_x_sq = sum(x)^2
mean_x = n*(mean(x))^2
mhat = (sum_xy - mean_xy)/(sum_x_sq - mean_x)
chat = mean(y) - mhat*mean(x)
}
data("cars")
df <- data("cars")
View(ls)
View(df)
data("cars")
View(data)
View(cars)
plot(cars$speed, cars$dist)
ls = function(x,y){
n = length(x)
sum_xy = sum(x*y)
mean_xy = n*mean(x)*mean(y)
sum_x_sq = sum(x)^2
mean_x = n*(mean(x))^2
mhat = (sum_xy - mean_xy)/(sum_x_sq - mean_x)
chat = mean(y) - mhat*mean(x)
return(c(mhat, chat))
}
x = cars$speed
y = cars$dist
ls(x,y)
slope <- 0.009271963
intercept <- 42.837211768
plot(cars$speed, cars$dist)
abline(a = intercept, b = slope, col='blue')
#abline(a = intercept, b = slope, col='blue')
abline(lm(x ~ y, data = cars), col = 'blue')
plot(cars$speed, cars$dist)
x = cars$speed
y = cars$dist
#abline(a = intercept, b = slope, col='blue')
abline(lm(x ~ y), col = 'blue')
abline(a = intercept, b = slope, col='blue')
rm(list=ls())
rm(list = ls())
rm(list=ls())
rm(list <- ls())
rm(list = ls())
rm(list=ls())
rm(list=ls())
n <- 10000
x <- runif(1, min = -1, max = 1)
y <- runif(1, min = -1, max = 1)
num_darts <- 10000
num_darts_in_circle <- 0
for(i in range 1:num_darts){
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(1, min = -1, max = 1)
y <- runif(1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
print(4 * (num_darts_in_circle/num_darts))
}
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
print(4 * num_darts_in_circle/num_darts)
}
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 1000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 100000
num_darts <- 100000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 1000000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
data <- warpbreaks
data <- warpbreaks
head(data)
class(data$breaks)
View(data)
rm(list = ls())
plot(cars, pch=20)
abline(lm(dist~speed, cars), lwd=2, col=2)
x = cars$speed
y = cars$dist
N = nrow(cars)
K = 10
folds = cut(1:N,K,labels=FALSE)
p1 = se = sb = numeric(K)
set.seed(1)
for(i in 1:K)
# CV
itrain = which(folds!=i)
lmo = lm(y[itrain]~x[itrain])
se[i] = summary(lmo)$coef[2,2]
set.seed(1)
for(i in 1:K)
# bootstrapping
ib = sample(1:N,N,replace=TRUE)
lmb = lm(y[ib]~x[ib])
sb[i] = summary(lmb)$coef[2,2]
mean(se)
mean(sb)
boxplot(cbind(se,sb))
t.test(se,sb)
rm(list=ls())
attach(mtcars)
mtcars
mtcars
model1 <- lm(mpg ~ as.factor(cyl) + wt)
summary(model1)
### Model Matrix ###
model.matrix(model1)
model2 <- lm(mpg ~ cyl + wt)
summary(model2)
model3 <- lm(mpg ~ cyl + wt + cyl*wt)
summary(model3)
# from the p value of interaction term we can say that it is statistically
# significant, which mean it is not appropriate to use the cyl or wt alone
# their estimates and also the interaction effect must be taken into account.
model.matrix(model3)
rm(list=ls())
setwd("D:/UCC/Academic Work/Sem-2/ST6033 - GLM/SDL/SLR")
data <- read.table("mens200m.txt", header = TRUE)
df <- read.table("mens200m.txt", header = TRUE)
rm(list=ls())
setwd("D:/UCC/Academic Work/Sem-2/ST6033 - GLM/SDL/SLR")
df <- read.table("mens200m.txt", header = TRUE)
df
View(df)
attach(df)
model1 <- lm(Men200m ~ Year)
summary(model1)
plot( x = Year , y = Men200m ,
xlab="Year", ylab="Men's 200m Winning Time",
main="Are Sprinters Getting Faster?",
panel.last = lines(sort(Year), fitted(model1)[order(Year)]))
x <- Men200m
y <- Year
xbar <- mean(x)
ybar <- mean(y)
SSxx <- sum( (x-xbar)^2 )
SSyy <- sum( (y-ybar)^2 )
SSxy <- sum( (x-xbar)*(y-ybar))
beta.hat = SSxy / SSxx
alpha.hat = ybar - beta.hat * xbar
alpha.hat
beta.hat
model.matrix(model1)
X <- model.matrix(model1)
t(X) %*% X
solve( t(X) %*% X , t(X) %*% y)
X[,2] <- scale(X[,2], center = TRUE, scale = FALSE)
t(X) %*% X
solve( t(X) %*% X , t(X) %*% y)
ybar
model1
for(i in 1:nrow(df)){
SSxx1 <- sum( (x[i]-xbar)^2 )
SSyy1 <- sum( (y[i]-ybar)^2 )
SSxy1 <- sum( (x[i]-xbar)*(y[i]-ybar))
}
beta.hat1 = SSxy1 / SSxx1
alpha.hat1 = ybar - beta.hat1 * xbar
beta.hat1
alpha.hat1
x - xbar
y - ybar
