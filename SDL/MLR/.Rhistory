clc
clear all()
rm(list=ls())
x <- c(1,2,3,4,5,6)
y <- c(5,10,15,20,25,30)
plot(x,y)
rm(list=ls())
library(ggplot2)
install.packages("ggplot2")
p1 = pnorm(30,50,5)
p3 = 1 - pnorm(60,50,5)
p2 = qnorm(0.25,50,5)
p3 = qnorm(0.79,50,5)
p4 = 1 - pnorm(60,50,5)
p5 = dnorm(50,50,5) - dnorm(40,50,5)
p6 = rnorm(1000,50,5)
p7 = dnorm(30,50,5)
p8 = dnorm(50,50,5)
p9 = dnorm(log(60,50,5))
p9 = dnorm(60,50,5)
p10 = log(p9)
ls = function(x,y){
n = length(x)
sum_xy = sum(x*y)
mean_xy = n*mean(x)*mean(y)
sum_x_sq = sum(x)^2
mean_x = n*(mean(x))^2
mhat = (sum_xy - mean_xy)/(sum_x_sq - mean_x)
chat = mean(y) - mhat*mean(x)
}
data("cars")
df <- data("cars")
View(ls)
View(df)
data("cars")
View(data)
View(cars)
plot(cars$speed, cars$dist)
ls = function(x,y){
n = length(x)
sum_xy = sum(x*y)
mean_xy = n*mean(x)*mean(y)
sum_x_sq = sum(x)^2
mean_x = n*(mean(x))^2
mhat = (sum_xy - mean_xy)/(sum_x_sq - mean_x)
chat = mean(y) - mhat*mean(x)
return(c(mhat, chat))
}
x = cars$speed
y = cars$dist
ls(x,y)
slope <- 0.009271963
intercept <- 42.837211768
plot(cars$speed, cars$dist)
abline(a = intercept, b = slope, col='blue')
#abline(a = intercept, b = slope, col='blue')
abline(lm(x ~ y, data = cars), col = 'blue')
plot(cars$speed, cars$dist)
x = cars$speed
y = cars$dist
#abline(a = intercept, b = slope, col='blue')
abline(lm(x ~ y), col = 'blue')
abline(a = intercept, b = slope, col='blue')
rm(list=ls())
rm(list = ls())
rm(list=ls())
rm(list <- ls())
rm(list = ls())
rm(list=ls())
rm(list=ls())
n <- 10000
x <- runif(1, min = -1, max = 1)
y <- runif(1, min = -1, max = 1)
num_darts <- 10000
num_darts_in_circle <- 0
for(i in range 1:num_darts){
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(1, min = -1, max = 1)
y <- runif(1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
print(4 * (num_darts_in_circle/num_darts))
}
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
print(4 * num_darts_in_circle/num_darts)
}
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 1000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 10000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 100000
num_darts <- 100000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
num_darts <- 1000000
num_darts_in_circle <- 0
for(i in 1:num_darts){
x <- runif(n = 1, min = -1, max = 1)
y <- runif(n = 1, min = -1, max = 1)
if(x^2 + y^2 <= 1){
num_darts_in_circle = num_darts_in_circle + 1
}
}
print(4 * num_darts_in_circle/num_darts)
data <- warpbreaks
data <- warpbreaks
head(data)
class(data$breaks)
View(data)
rm(list = ls())
plot(cars, pch=20)
abline(lm(dist~speed, cars), lwd=2, col=2)
x = cars$speed
y = cars$dist
N = nrow(cars)
K = 10
folds = cut(1:N,K,labels=FALSE)
p1 = se = sb = numeric(K)
set.seed(1)
for(i in 1:K)
# CV
itrain = which(folds!=i)
lmo = lm(y[itrain]~x[itrain])
se[i] = summary(lmo)$coef[2,2]
set.seed(1)
for(i in 1:K)
# bootstrapping
ib = sample(1:N,N,replace=TRUE)
lmb = lm(y[ib]~x[ib])
sb[i] = summary(lmb)$coef[2,2]
mean(se)
mean(sb)
boxplot(cbind(se,sb))
t.test(se,sb)
rm(list=ls())
attach(mtcars)
mtcars
mtcars
model1 <- lm(mpg ~ as.factor(cyl) + wt)
summary(model1)
### Model Matrix ###
model.matrix(model1)
model2 <- lm(mpg ~ cyl + wt)
summary(model2)
model3 <- lm(mpg ~ cyl + wt + cyl*wt)
summary(model3)
# from the p value of interaction term we can say that it is statistically
# significant, which mean it is not appropriate to use the cyl or wt alone
# their estimates and also the interaction effect must be taken into account.
model.matrix(model3)
rm(list=ls())
setwd("D:/UCC/Academic Work/Sem-2/ST6033 - GLM/SDL/MLR")
dat = matrix(scan(file = "nineXvars.txt"), ncol = 10, byrow = True)
dat = matrix(scan(file = "nineXvars.txt"), ncol = 10, byrow = TRUE)
df = as.data.frame(dat)
names(df) = c("y", paste("X", 1:9, sep = ""))
dim(df)
names(df)
pairs(df)
### Fitting a large model with quadratic and interaction terms
fmla = as.formula( paste("y ~ .^2 +", paste("I(X",1:9,"^2)",
sep="", collapse=" + ") ))
mod <- lm( fmla , data = dat)
mod <- lm( fmla , data = df)
summary(mod)
?step
mod.aic = step(mod, direction = "backward", k = 2)
exp_mod <- lm(y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + I(X1^2) + I(X2^2) +
X1:X2 + X3:X4 + X3:X5 + X3:X8, data = df)
AIC(exp_mod)
AIC(mod)
summary(exp_mod)
summary(mod)
mod.bic = step(mod, direction = "backward", k = log(nrow(df)))
summary(mod.bic)
exp_mod_bic <- lm(y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + I(X1^2) + I(X2^2) +
X1:X2, data = df)
BIC(exp_mod_bic)
BIC(exp_mod)
BIC(mod)
AIC(exp_mod_bic)
AIC(exp_mod)
AIC(mod)
plot(fitted(mod.bic), residuals(mod.bic), pch = ".")
rm(list=ls())
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413,.56, 272.38, 263.14, 94.099),
X1 = c(89, 87, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2)
X1 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413,.56, 272.38, 263.14, 94.099),
X1 = c(89, 87, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X1 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
)
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413,.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X1 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
)
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413,.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
)
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413,.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
)
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413,.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
)
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)  # Removed the extra comma here
)
plot(df)
library(ggplot2)
# Scatterplot with color differentiation for "on" and "off" conditions
ggplot(df, aes(x = X1, y = Y, color = factor(X2))) +
geom_point() +
scale_color_manual(values = c("blue", "red")) +
labs(title = "Scatterplot of Chemical Process Yield",
x = "X1",
y = "Y",
color = "Condition") +
theme_minimal()
plot(df$X1, df$Y, col = ifelse(df$X2 == 1, "red", "blue"),
pch = 16, main = "Scatterplot with On and Off Conditions",
xlab = "X1", ylab = "Y")
# Adding a legend
legend("topright", legend = c("Off", "On"),
col = c("blue", "red"), pch = 16, cex = 0.8)
plot(df$X1, df$Y, col = ifelse(df$X2 == 1, "red", "blue"),
pch = 16, main = "Scatterplot with On and Off Conditions",
xlab = "X1", ylab = "Y")
# Adding a legend
legend("topright", legend = c(0, 1),
col = c("white", "black"), pch = 16, cex = 0.8)
# Adding a legend
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
rm(list=ls())
rm(list=ls())
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)  # Removed the extra comma here
)
plot(df)
plot(df$X1, df$Y, col = ifelse(df$X2 == 1, "red", "blue"),
pch = 16, main = "Scatterplot of Chemical Process Yield",
xlab = "X1", ylab = "Y")
plot(df$X1, df$Y, col = ifelse(df$X2 == 1, "red", "black"),
pch = 16, main = "Scatterplot of Chemical Process Yield",
xlab = "X1", ylab = "Y")
# Adding a legend
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
plot(df$X1, df$Y, col = ifelse(df$X2 == 1, "red", "black"),
pch = 16, main = "Scatterplot of Chemical Process Yield",
xlab = "Concentration", ylab = "Percipitate Yield g/hour")
# Adding a legend
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
mod <- lm(Y ~ X1 + X2, data = df)
summary(mod)
residuals(mod)
par(mfrow=c(2,2))
plot(mod)
residuals <- residuals(model)
residuals <- residuals(mod)
plot(fitted(model), residuals, col = ifelse(df$X2 == 1, "red", "black"),
pch = 16, main = "Residuals vs. Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
plot(fitted(mod), residuals, col = ifelse(df$X2 == 1, "red", "black"),
pch = 16, main = "Residuals vs. Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
plot(fitted(mod), residuals, col = ifelse(df$X2 == 1, "black", "red"),
pch = 16, main = "Residuals vs. Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
rm(list=ls())
df <- data.frame(Y = c(418.48, 417.03, 285.23, 318.86, 186.27, 286.60, 78.927, 103.57, 185.26, 216.20, 371.29, 162.48, 410.48, 418.34, 331.68, 274.78, 336.88, 362.53, 328.90, 234.79, 128.19, 485.29, 157.25, 240.55, 96.148, 228.42, 413.56, 272.38, 263.14, 94.099),
X1 = c(89, 97, 63, 77, 41, 70, 23, 25, 51, 53, 85, 38, 93, 94, 69, 39, 64, 68, 60, 49, 15, 89, 19, 42, 12, 36, 85, 53, 44, 2),
X2 = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)  # Removed the extra comma here
)
plot(df)
plot(df$X1, df$Y, col = ifelse(df$X2 == 1, "black", "red"),
pch = 16, main = "Scatterplot of Chemical Process Yield",
xlab = "Concentration", ylab = "Percipitate Yield g/hour")
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
mod <- lm(Y ~ X1 + X2, data = df)
summary(mod)
residuals(mod)
residuals <- residuals(mod)
plot(fitted(mod), residuals, col = ifelse(df$X2 == 1, "black", "red"),
pch = 16, main = "Residuals vs. Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
qqnorm(residuals)
qqline(residuals, col = ifelse(df$X2 == 1, "black", "red"))
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
qqnorm(residuals, col = ifelse(df$X2 == 1, "black", "red"))
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
?qqnorm
anova(mod)
rm(list=ls())
### Anaerobic = 0, Aerated = 1
df <- data.frame(Age = c(2, 5, 8, 10, 14, 15, 18, 2, 5, 8, 10, 14, 15),
Bacteria = c(1319, 1434, 1523, 1656, 1834, 1988, 2296), 1516, 1989, 2345, 2732, 3118, 3435, 3787),
### Anaerobic = 0, Aerated = 1
df <- data.frame(
Age = c(2, 5, 8, 10, 14, 15, 18, 2, 5, 8, 10, 14, 15),
Bacteria = c(1319, 1434, 1523, 1656, 1834, 1988, 2296, 1516, 1989, 2345, 2732, 3118, 3435, 3787),
Culture = c(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1)
)
### Anaerobic = 0, Aerated = 1
df <- data.frame(
Age = c(2, 5, 8, 10, 14, 15, 18, 2, 5, 8, 10, 14, 15, 18),
Bacteria = c(1319, 1434, 1523, 1656, 1834, 1988, 2296, 1516, 1989, 2345, 2732, 3118, 3435, 3787),
Culture = c(0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1)
)
plot(df$Age, df$Bacteria, col = ifelse(df$Culture == 1, "black", "red"),
pch = 16, main = "Scatterplot of Bacteria Cultures",
xlab = "Age", ylab = "Bacteria")
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
mod1 <- lm(Bacteria ~ Age + Culture + Age*Culture, data = df)
summary(mod1)
anova(mod1)
mod2 <- lm(Bacteria ~ Age + Age*Culture, data = df)
summary(mod2)
mod2 <- lm(Bacteria ~ Age + Culture, data = df)
summary(mod2)
mod2 <- lm(Bacteria ~ Age + Age*Culture, data = df)
summary(mod2)
summary.aov(mod1)
mod2 <- lm(Bacteria ~ Age, data = df)
summary(mod2)
residuals <- residuals(mod1)
plot(fitted(mod1), residuals, col = ifelse(df$X2 == 1, "black", "red"),
pch = 16, main = "Residuals vs. Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
qqnorm(residuals, col = ifelse(df$X2 == 1, "black", "red"))
legend("topright", legend = c(0, 1),
col = c("red", "black"), pch = 16, cex = 0.8)
plot(mod1)
par(mfrow=c(2,2))
plot(mod1)
